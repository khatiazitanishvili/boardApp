{"ast":null,"code":"var _jsxFileName = \"/Users/khatiazitanishvili/Downloads/we2.blatt11-main 4/src/components/PageMessageEdit.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { Container, Card, Button } from \"react-bootstrap\";\nimport { useErrorHandler } from \"react-error-boundary\";\nimport { useParams } from \"react-router-dom\";\nimport { getMessage, getUserIdFromJWT, updateMessage } from \"../backend/boardapi\";\nimport { useUserIDContext } from \"./UserIdContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport MessageHelp from \"./MessageHelp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PageChannelEdit() {\n  _s();\n  const {\n    userID,\n    setUserID\n  } = useUserIDContext();\n  const [newMessage, setNewMessage] = React.useState({\n    authorId: \"\",\n    title: \"\",\n    content: \"\",\n    channelId: \"\"\n  });\n  const navigate = useNavigate();\n  const handleError = useErrorHandler();\n  const params = useParams();\n  let messageId = params.messageID;\n  const user = getUserIdFromJWT();\n  setUserID(user);\n  async function load() {\n    try {\n      if (!messageId) {\n        throw new Error(\"MessageId not found\");\n      }\n      const newMessage = await getMessage(messageId);\n      if (!newMessage) {\n        throw new Error(\"Message with this id not found\");\n      }\n      setNewMessage(newMessage);\n    } catch (err) {\n      handleError(err);\n    }\n  }\n  async function onUpdate() {\n    try {\n      if (!messageId) {\n        throw new Error(\"ChannelID is null\");\n      }\n      const m = await updateMessage(newMessage);\n      navigate(-1);\n    } catch (err) {\n      handleError(err);\n    }\n  }\n  useEffect(() => {\n    load();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(MessageHelp, {\n          newMessage: newMessage,\n          setNewMessage: setNewMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: onUpdate,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: e => navigate(-1),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(PageChannelEdit, \"y75pYbqIO8se99cMSD9wAwkseuo=\", false, function () {\n  return [useUserIDContext, useNavigate, useErrorHandler, useParams];\n});\n_c = PageChannelEdit;\nvar _c;\n$RefreshReg$(_c, \"PageChannelEdit\");","map":{"version":3,"names":["React","useEffect","Container","Card","Button","useErrorHandler","useParams","getMessage","getUserIdFromJWT","updateMessage","useUserIDContext","useNavigate","MessageHelp","PageChannelEdit","userID","setUserID","newMessage","setNewMessage","useState","authorId","title","content","channelId","navigate","handleError","params","messageId","messageID","user","load","Error","err","onUpdate","m","e"],"sources":["/Users/khatiazitanishvili/Downloads/we2.blatt11-main 4/src/components/PageMessageEdit.tsx"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Container, Card, Row, Dropdown, Button, Col, Form } from \"react-bootstrap\";\nimport { useErrorHandler } from \"react-error-boundary\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { createMessage, ErrorFromValidation, getBoard, getChannel, getMessage, getMessages, getUserIdFromJWT, updateChannel, updateMessage } from \"../backend/boardapi\";\nimport { MessageResource } from \"../ChannelResources\"\nimport { useUserIDContext } from \"./UserIdContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport MessageHelp from \"./MessageHelp\";\n\n\nexport type MessageRes = {\n    newMessage: MessageResource,\n    setNewMessage: (f: MessageResource) => void\n}\n\nexport default function PageChannelEdit() {\n    const { userID, setUserID } = useUserIDContext();\n    const [newMessage, setNewMessage] = React.useState<MessageResource>({ authorId: \"\", title: \"\", content: \"\", channelId: \"\" });\n\n    const navigate = useNavigate();\n    const handleError = useErrorHandler();\n\n    const params = useParams();\n    let messageId = params.messageID;\n\n    const user = getUserIdFromJWT();\n    setUserID(user);\n\n    async function load() {\n        try {\n            if (!messageId) {\n                throw new Error(\"MessageId not found\")\n            }\n            const newMessage = await getMessage(messageId);\n            if (!newMessage) {\n                throw new Error(\"Message with this id not found\")\n            }\n            setNewMessage(newMessage);\n        } catch (err) {\n            handleError(err);\n        }\n    }\n\n    async function onUpdate() {\n        try {\n            if (!messageId) {\n                throw new Error(\"ChannelID is null\");\n            }\n            const m = await updateMessage(newMessage);\n            navigate(-1);\n        } catch (err) {\n            handleError(err);\n        }\n    }\n\n    useEffect(() => { load(); }, []);\n\n    return (\n        <div>\n            <Container>\n                <Card.Body>\n                    <MessageHelp newMessage={newMessage} setNewMessage={setNewMessage} />\n                    <br />\n                    <Button variant=\"primary\" onClick={onUpdate}>Submit</Button>\n                    <Button variant=\"danger\" onClick={e => navigate(-1)}>Cancel</Button>\n                </Card.Body>\n            </Container>\n        </div>\n    )\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAkB,OAAO;AAC3C,SAASC,SAAS,EAAEC,IAAI,EAAiBC,MAAM,QAAmB,iBAAiB;AACnF,SAASC,eAAe,QAAQ,sBAAsB;AACtD,SAAsBC,SAAS,QAAQ,kBAAkB;AACzD,SAAmEC,UAAU,EAAeC,gBAAgB,EAAiBC,aAAa,QAAQ,qBAAqB;AAEvK,SAASC,gBAAgB,QAAQ,iBAAiB;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,eAAe;AAAC;AAQxC,eAAe,SAASC,eAAe,GAAG;EAAA;EACtC,MAAM;IAAEC,MAAM;IAAEC;EAAU,CAAC,GAAGL,gBAAgB,EAAE;EAChD,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGjB,KAAK,CAACkB,QAAQ,CAAkB;IAAEC,QAAQ,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAE,EAAE;IAAEC,SAAS,EAAE;EAAG,CAAC,CAAC;EAE5H,MAAMC,QAAQ,GAAGZ,WAAW,EAAE;EAC9B,MAAMa,WAAW,GAAGnB,eAAe,EAAE;EAErC,MAAMoB,MAAM,GAAGnB,SAAS,EAAE;EAC1B,IAAIoB,SAAS,GAAGD,MAAM,CAACE,SAAS;EAEhC,MAAMC,IAAI,GAAGpB,gBAAgB,EAAE;EAC/BO,SAAS,CAACa,IAAI,CAAC;EAEf,eAAeC,IAAI,GAAG;IAClB,IAAI;MACA,IAAI,CAACH,SAAS,EAAE;QACZ,MAAM,IAAII,KAAK,CAAC,qBAAqB,CAAC;MAC1C;MACA,MAAMd,UAAU,GAAG,MAAMT,UAAU,CAACmB,SAAS,CAAC;MAC9C,IAAI,CAACV,UAAU,EAAE;QACb,MAAM,IAAIc,KAAK,CAAC,gCAAgC,CAAC;MACrD;MACAb,aAAa,CAACD,UAAU,CAAC;IAC7B,CAAC,CAAC,OAAOe,GAAG,EAAE;MACVP,WAAW,CAACO,GAAG,CAAC;IACpB;EACJ;EAEA,eAAeC,QAAQ,GAAG;IACtB,IAAI;MACA,IAAI,CAACN,SAAS,EAAE;QACZ,MAAM,IAAII,KAAK,CAAC,mBAAmB,CAAC;MACxC;MACA,MAAMG,CAAC,GAAG,MAAMxB,aAAa,CAACO,UAAU,CAAC;MACzCO,QAAQ,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACVP,WAAW,CAACO,GAAG,CAAC;IACpB;EACJ;EAEA9B,SAAS,CAAC,MAAM;IAAE4B,IAAI,EAAE;EAAE,CAAC,EAAE,EAAE,CAAC;EAEhC,oBACI;IAAA,uBACI,QAAC,SAAS;MAAA,uBACN,QAAC,IAAI,CAAC,IAAI;QAAA,wBACN,QAAC,WAAW;UAAC,UAAU,EAAEb,UAAW;UAAC,aAAa,EAAEC;QAAc;UAAA;UAAA;UAAA;QAAA,QAAG,eACrE;UAAA;UAAA;UAAA;QAAA,QAAM,eACN,QAAC,MAAM;UAAC,OAAO,EAAC,SAAS;UAAC,OAAO,EAAEe,QAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgB,eAC5D,QAAC,MAAM;UAAC,OAAO,EAAC,QAAQ;UAAC,OAAO,EAAEE,CAAC,IAAIX,QAAQ,CAAC,CAAC,CAAC,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgB;MAAA;QAAA;QAAA;QAAA;MAAA;IAC5D;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACV;AAEd;AAAC,GAtDuBV,eAAe;EAAA,QACLH,gBAAgB,EAG7BC,WAAW,EACRN,eAAe,EAEpBC,SAAS;AAAA;AAAA,KAPJO,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}