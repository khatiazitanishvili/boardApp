{"ast":null,"code":"var _jsxFileName = \"/Users/khatiazitanishvili/Downloads/we2.blatt11-main 4/src/components/PageBoard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport LoadingIndicator from \"./LoadingIndicator\";\nimport ChannelDescription from \"./ChannelDescription\";\nimport { getBoard, logout } from \"../backend/boardapi\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Card, Col, Container, Dropdown, Row } from \"react-bootstrap\";\nimport { useErrorHandler } from \"react-error-boundary\";\nimport { useUserIDContext } from \"./UserIdContext\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PageBoard() {\n  _s();\n  const [myEntries, setMyEntries] = useState();\n  const {\n    userID\n  } = useUserIDContext();\n  const handleError = useErrorHandler();\n  async function load() {\n    try {\n      const c = await getBoard();\n      setMyEntries(c);\n    } catch (err) {\n      setMyEntries(null);\n      if (err.name === \"TokenExpiredError\" || \"SyntaxError\") {\n        logout();\n      } else {\n        handleError(err);\n      }\n    }\n  }\n  React.useEffect(() => {\n    load();\n  }, [userID]);\n  if (!myEntries) {\n    return /*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          xs: 2,\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Channels auf dem Board\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), userID ? /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: /*#__PURE__*/_jsxDEV(LinkContainer, {\n                to: `/channel/create`,\n                children: /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  children: \"New Channel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 37\n              }, this)\n            }, \"CreateButton\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this)\n          }, \"channel \" + userID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"g-2\",\n          children: myEntries.channels.map(myEntry => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: '25rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(ChannelDescription, {\n                    channel: myEntry\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 43\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: `/channel/${myEntry.id}`,\n                      children: \"View Channel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 49\n                    }, this)\n                  }, myEntry.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this)\n            }, myEntry.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(PageBoard, \"S18KfI1qchqN1mkd1NUqu2ZTetA=\", false, function () {\n  return [useUserIDContext, useErrorHandler];\n});\n_c = PageBoard;\nvar _c;\n$RefreshReg$(_c, \"PageBoard\");","map":{"version":3,"names":["React","useState","LoadingIndicator","ChannelDescription","getBoard","logout","Link","Button","Card","Col","Container","Dropdown","Row","useErrorHandler","useUserIDContext","LinkContainer","PageBoard","myEntries","setMyEntries","userID","handleError","load","c","err","name","useEffect","channels","map","myEntry","width","id"],"sources":["/Users/khatiazitanishvili/Downloads/we2.blatt11-main 4/src/components/PageBoard.tsx"],"sourcesContent":["import { BoardResource, ChannelResource } from \"../ChannelResources\";\nimport React, { useState, useEffect, createContext } from 'react';\nimport LoadingIndicator from \"./LoadingIndicator\";\nimport ChannelDescription from \"./ChannelDescription\";\nimport { getBoard, logout } from \"../backend/boardapi\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Card, Col, Container, Dropdown, Row } from \"react-bootstrap\";\nimport { useErrorHandler } from \"react-error-boundary\";\nimport { useUserIDContext } from \"./UserIdContext\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nexport default function PageBoard() {\n    const [myEntries, setMyEntries] = useState<BoardResource | null>();\n    const { userID } = useUserIDContext();\n    const handleError = useErrorHandler();\n\n    async function load() {\n        try {\n            const c = await getBoard();\n            setMyEntries(c);\n        } catch (err: any) {\n            setMyEntries(null);\n            if (err.name === \"TokenExpiredError\" || \"SyntaxError\") {\n                logout();\n            } else {\n                handleError(err);\n            }\n        }\n    }\n    React.useEffect(() => { load(); }, [userID]);\n\n    if (!myEntries) {\n        return <LoadingIndicator />\n    } else {\n        return (\n            <div>\n                <br></br>\n                <Container>\n                    <Row xs={2} md={4}>\n                        <Col>\n                            <h3>Channels auf dem Board</h3>\n                        </Col>\n                        {userID ?\n                            <Col key={\"channel \" + userID}>\n                                <Button key={\"CreateButton\"}>\n                                    <LinkContainer to={`/channel/create`}>\n                                        <Dropdown.Item>New Channel</Dropdown.Item>\n                                    </LinkContainer>\n                                </Button>\n                            </Col>\n                            : <>\n                            </>\n                        }\n                    </Row>\n                    <Row className=\"g-2\">\n                        {\n                            myEntries.channels.map(myEntry =>\n                                <><Card key={myEntry.id} style={{ width: '25rem' }}>\n                                    <Card.Body>\n                                        <><ChannelDescription channel={myEntry} />\n                                            <Card.Footer key={myEntry.id}>\n                                                <Link to={`/channel/${myEntry.id}`}>View Channel</Link>\n                                            </Card.Footer></>\n                                    </Card.Body>\n                                </Card><br /></>\n                            )\n                        }\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}